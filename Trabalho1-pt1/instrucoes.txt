Instruções:

Parte 01) 7.5 pontos
Entrega e apresentação: 18/10/2019 (sex)


-[6.0] Implementar um modelador

  -[2.5] implementacao orientada a objeto (definir uma classe Objeto)

	OK    -[1.0] heranca
	 o		-definir um método desenhar (virtual)
	 o		-a ser implementado por classes mais específicas (herdando da classe Objeto)
			 por exemplo: Arvore, ...
	OK  -[0.5] transformacoes
	 o		-incluir atributos referentes às possíveis transformações
	 o		-translação/rotação/escala
	OK  -[0.5] selecao
	 o		-incluir um atributo na classe Objeto para dizer se o objeto está ou não selecionado
			 se deve ou não ser pintado com uma cor de destaque (branco, por exemplo)
	 o		-usá-lo como teste no método desenhar
	OK	-[0.5] sist local de referencia
	 o    	-incluir um atributo na classe Objeto para alternar entre desenhar ou não os eixos do sist local do objeto
	 o		-usá-lo como teste no método desenhar

  -[1.5] manipulacao do vetor de Objetos

	 	-[0.5] permitir incluir objetos nesse vetor (usando o teclado)
	 o		-permitir incluir objetos independentes, inclusive do mesmo tipo (mesma classe filha)
	 o		-cada tipo de objeto deve ser associado a uma tecla diferente
	 o   	-objetos devem ser incluidos com seu centro coincidindo com a origem do sist local
(preferi não fazer assim =/ )			-seu sist local deve estar inicialmente alinhado com o sist global
	  		-usar o proprio modelador implementado, durante sua execucao, para posicionar cada objeto 
			 (selecionado) no cenario
	OK  -[0.5] permitir alternar/selecionar os objetos desse vetor (de um a um, seguindo a ordem do vetor)
	 o   	-marcar o objeto selecionado (pintar com uma cor de destaque, o objeto inteiro com a mesma cor)
	 o   	-definir teclas para avançar e para voltar no vetor
	 o		-permitir avanco e retorno ciclico (indo do ultimo para o primeiro e vice-versa)
		-[0.5] permitir apagar objetos desse vetor (usando o teclado)
	 o   	-permitir apagar o objeto selecionado
	 o   	-permitir apagar o ultimo objeto do vetor
(não entendi o que fazer )	  	-[1.5] permitir modificar os atributos do objeto selecionado
	 o  -[1.2] translação/rotação/escala (usando o mouse)
	    	-forçar o usuario a modelar o cenario a partir da execucao do modelador (programa), e nao direto no codigo
	OK  -[0.3] desenhar ou não eixos do sist local (usando alguma tecla)

OK	-[0.5] permitir salvar e carregar todos os objetos (todos os seus atributos) do vetor em/de um arquivo


-[0.5] Câmeras

o	-[0.2] incluir implementação pronta já disponibilizada nos exemplos (class Camera [CameraDistante e/ou CameraJogo])
		-que permite movimentar a câmera pelo cenário

o	-[0.3] pré-estabelecer posições/orientações (pelo menos 6) de câmera específicas interessantes, de acordo com o cenário modelado
		-permitir alternar entre essas posições/orientações pré-estabelecidas usando o teclado


-[1.0] Modelar, salvar e carregar um cenário com um certo nível de detalhes (avaliacao subjetiva considerando complexidade e criatividade)
    -basear-se nos exercícios (no dropbox) ou sugestões dadas (não modelar laboratório, nem sala de aula)
    	--pelo menos 5 objetos diferentes (alguns deles podem usar 3ds)
    -pelo menos 2 objetos devem ser modelados usando glBegin(...);...glEnd();
    	--definir os glNormal3f(...); das faces (composta pelos vértices) adequadamente
    	--pelo menos 2 faces inclinadas (ou seja, não alinhadas aos eixos do sist de coordenadas local do objeto)
        	---usar transformacoes locais fixas pode facilitar





------------- Instalando pelo terminal
GLUT:
	sudo apt-get install freeglut3-dev

MALHAS 3D:
	sudo apt-get install lib3ds-dev

IMAGENS/TEXTURAS:
	sudo apt-get install libdevil-dev

SDL:
	sudo apt-get install libsdl1.2-dev
	sudo apt-get install libsdl-image1.2-dev


QT5 (recomendado):
	sudo apt-get install qtcreator
	sudo apt-get update
	sudo apt-get install qt5-default

obs.:reiniciar qtcreator

____________________________________
QT4 (para quem já possui Qt4 instalado e está com problema nos kits):
	sudo apt-get install qt4-dev-tools libqt4-dev libqt4-core libqt4-gui
